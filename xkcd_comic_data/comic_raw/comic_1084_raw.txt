We still need to complete some explanations like this one: 1608: Hoverboard. All incomplete explanations are here.
Never use the Math markup language at the transcript. The reason for this you can read at the Editor FAQ.
1084: Server Problem
Explain xkcd: It's 'cause you're dumb.
(Redirected from 1084)
|<< PrevComic #1084 (July 20, 2012)Next >>|
Server Problem

Title text: Protip: Annoy Ray Kurzweil by always referring to it as the 'Cybersingularity'.
Explanation[edit]
Cueball has messed up his Linux server, apparently not for the first time. Megan offers to take a look at the PC, and she casually types in "ls" — a very basic command that lists the files in the current directory. The computer returns a bizarre error message — it trips over one of the simplest commands, indicating that Cueball's system is messed up. Really messed up.
The /usr/share path should indicate "architecture-independent shared data". Adobe is the software company that produces Acrobat and Photoshop. Android VM would be a virtual machine for Android. The .jar extension suggests a Java-language program. None of Adobe software, Android, or Java are needed to run "ls". All of the above have nothing to do with each other, with the exception that Android applications (but not core command line utilities, like ls) are written in Java. Also, basic system executables like "ls" would never be placed within /usr/share or within some "example" or "doc" directory. On Linux, executables don't have filename extensions like ".exe" or ".jar". Core executables such as "ls" are often shipped with the operating system as binaries, so the presence of "ls.jar" suggests Cueball was attempting to unorthodoxly replace the existing executable with his own Java implementation. Additionally, it would require the folder to be within $PATH. In other words, the error message implies that the server is in a very bad state.
In the last frame Megan is bewildered by this result and asks "what did you do?". Cueball suggest a course of action which mimics a common error message: "[X] is busy, please try again later." Obviously he has seen this type of message frequently enough to try it as a general cure in all similar cases (even scarier, there is a good possibility that his tech issues are so bizarre that it often works for him).
Megan then tells Cueball to "shut down the system and wait for the singularity," referring to a hypothetical future event when superintelligence can be artificially created. Since future superintelligent humans/computers transcend our comprehension, we can't predict or even understand what will happen after the singularity. One interpretation is that Megan is telling Cueball that his system is such a mess that it will take a post-singularity superintelligence to fix it (or run it in its current state, as only an intelligence beyond present comprehension would be capable of doing). It also indicates that either 1782: Team Chat or 1668: Singularity could be the sequel to this comic. Since the singularity is a hypothetical event that may never happen, or may happen at a date unimaginably far in the future, Megan is essentially telling Cueball to give up completely on fixing his server. This is her way of declaring that no human can fix or understand his server.
The title text is yet another protip from Randall. Ray Kurzweil is an author and futurist who has talked and written much about a technological singularity. Presumably, mangling the jargon (by confusing the concept of the "singularity" with the science fiction term "cyberspace") is something Kurzweil (as an expert) would find annoying. Also, as Randall later pointed out in 1573: Cyberintelligence, the prefix "cyber" has not really been used for a decade...
Transcript[edit]
[Cueball at his computer calls out for Megan who comes walking in to the frame.]
Cueball: I, um, messed up my server again.
Megan: I'll take a look. You have the weirdest tech problems.
[Zoom in on only Megan who uses the root prompt on the computer.]
~# ls
[Megan stands next to the computer, Cueball sits behind her on his chair. The computer returns the following:]
/usr/share/Adobe/doc/example/android_vm/root/sbin/ls.jar:
Error: Device is not responding.
[Megan turns towards Cueball who lifts his hands with palm up.]
Megan: What did you do!?
Cueball: Maybe the device is busy. Should I try it later?
Megan: You should shut down this system and wait for the Singularity.
Trivia[edit]
This is the first comic to have a high-resolution (pixel-doubled) version of its image.

 add a comment! ⋅  add a topic (use sparingly)! ⋅  refresh comments!
Discussion
It should be noted that some android apps are written in Kotlin and not Java. 108.162.215.224 16:06, 25 June 2020 (UTC)
It reminded me of the Flashback Virus that happened on Macs --Toddr (talk) 21:41, 9 August 2012 (UTC)
WooWoo Science from La-La Land
I love this paragraph: "Proponents of the singularity typically state that an "intelligence explosion",where superintelligences design successive generations of increasingly powerful minds, might occur very quickly and might not stop until the agent's cognitive abilities greatly surpass that of any human."
"OK team, you can stop now, we are much more intelligent than they are" "Don't we need to keep learning" "Nah!" 86.16.130.17 (talk) 12:59, 16 August 2012 (UTC) (please sign your comments with ~~~~)
Whence comes the quote (and the follow-up commentary)? Attribution requested. Posted by an IP-address contributor; if you'd like to see this retained, please follow up with sources, explanation, and signature... otherwise, I think the content is just tangential enough to be removed. -- IronyChef (talk) 14:42, 16 August 2012 (UTC)
I don't know what the section heading is referring to, but I'm pretty sure the quote is from wikipedia (diff). Mark Hurd (talk) 15:16, 13 April 2013 (UTC)
I believe the assumption is that they will hit some sort of fundamental physical limit on intelligence (At the extreme long-term end, perhaps latency due to the finite speed of light) and stop, rather than simply grow tired of advancing and focus attention elsewhere. Thirgfloorgreg (talk) 23:02, 17 August 2012 (UTC)
I think there are two ways of interpreting it. The most likely is that Megan's "What did you do!?" is a cry of frustration and amazement that Cueball has managed to *so* break the server. First, how on earth did Cueball's $PATH get changed *at all* so that executing "ls" in the shell ran anything but the usual /bin/ls? Second, how did it end up pointing to that ls.jar? And third, what the heck did Cueball do to end up with that ls.jar being installed there anyway!? Then her "You should shut down..." comment should be interpreted as being preceded with the phrase "You are so clearly not qualified to use a computer that ...". On the other hand, she may be expressing awe and amazement at his ability to interact with his system in such a bizarre way. And then her "You should shut down ..." comment should be preceded with the phrase, "You are clearly so at one with computing machinery that ..." TK 2012-08-17
alias ls='sudo java usr/share/Adobe/doc/example/android_vm/root/sbin/ls.jar' Davidy22 (talk) 23:35, 16 September 2012 (UTC)
or you could edit $PATH and do a soft link from the first member of PATH/ls to /usr/share/Adobe/doc/example/android_vm/root/sbin/ls.jar, anyway if i was Megan i wouldn't give up just yet, i still have /bin/ls and dir in my disposal... (and always check the environment variables... never assume the user's environment is clean.. it's just most likely that $PATH got screwed up (happened a bit too often for my liking in my previous company.. some people just love to use the command "set PATH=/myprog" instead of set PATH=${PATH}:/myprog ) and all you had to do is to reset the variable and we are done :) (but ya.. Megan's reaction is also my reaction.. it's fun to see people helpless and think that they have royally screwed up their system when you swoop in like a super hero to miraculously repair their system) 118.101.220.167 09:59, 4 December 2012 (UTC)
Considering Cueball's response, which suggests he is completely unaware of the unlikeliness of the error message, we can assume that the latter is not the case. Cueball totally fails to miss the point by suggesting a simple solution while not realizing how messed up his system would need to be to not even be able to operate the ls command. --88.75.181.101 02:45, 20 September 2012 (UTC)
Cueball has somehow messed up his path so that 'ls' now points to ls.jar, which executes the command on an external device (presumably an Android device). 134.134.139.72 (talk) 18:15, 28 August 2012 (UTC) (please sign your comments with ~~~~)
Cueball's last line is a reference to an error message from the 8-bit era that went something like "Device not ready" or "device busy, try again later" which led some people to interpret it (literally) that they should try again later, when it really meant "the drive can't read the floppy disc that's in it". 75.103.23.206 20:39, 7 December 2012 (UTC)
"Device not ready" and "Device busy, try again later" messages are usually emited when the driver tries to communicate with device and doesn't get expected response in some defined time. If there would be no timeout for its actions, the computer would freeze. Sometimes (especially in case of old devices), the choosen timeout is too short and trying later actually WILL solve the problem - for example, if you insert CD in optical drive and immediately try to access it, you may get timeout because it takes the drive some time to determine what type of medium was inserted and read TOC. More often, though, the "not ready" is actually caused by persistent problem which will not solve itself - for example again with CD, the CD may be unreadable. -- Hkmaly (talk) 11:44, 21 November 2013 (UTC)
Why Ray Kurzweil would be annoyed by 'Cybersingularity' ? Osias (talk) 01:03, 19 September 2013 (UTC)
I agree - the explanation on Ray is not good enough. I have amended it a bit by putting in four relevant links to Wikipedia in the last phrase - but I cannot explain the title text, and has just assigned the explanation to be incomplete. Kynde (talk) 10:13, 14 January 2014 (UTC)
If Megan actually knows whats going on, wouldn't she run "PATH="/usr/share/Adobe/doc/example/android_vm/root/sbin:$PATH"? 173.245.54.212 16:18, 12 March 2015 (UTC)
Just wonder if part of the joke is "is ajar" - cars often complain about a door being ajar and will not function until closed.--- 173.245.56.133 (talk) (please sign your comments with ~~~~)
Java executables DO end in .jar on linux 162.158.255.90 18:50, 28 June 2016 (UTC)
I think the explanation should touch on what it means for a device to be busy and whether or not that makes sense for a magical Java archive core Linux system binary for (chrooted?) Android. Because there's a lot going on in that line, it's important to touch on it all. 172.68.141.226 07:03, 12 December 2018 (UTC)
Categories: All comicsComics from 2012Comics from JulyFriday comicsComics featuring CueballComics featuring MeganComputersLinuxProtipSingularityCueball Computer ProblemsComics featuring real people