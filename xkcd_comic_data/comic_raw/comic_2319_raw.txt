We still need to complete some explanations like this one: 1608: Hoverboard. All incomplete explanations are here.
Never use the Math markup language at the transcript. The reason for this you can read at the Editor FAQ.
2319: Large Number Formats
Explain xkcd: It's 'cause you're dumb.
(Redirected from 2319)
|<< PrevComic #2319 (June 12, 2020)Next >>|
Large Number Formats

Title text: 10^13.4024: A person who has come back to numbers after a journey deep into some random theoretical field
Explanation[edit]
This comic shows what the way you write large numbers says about you. Different people use different methods to express large numbers. And this comic claims it can tell something about you based on the way you format large numbers. In this way, the comic is similar in idea to 977: Map Projections, where it was your choice of map projections that could tell something about you.
See the table below for each of the 10 different ways to express large numbers, plus the 11th mentioned in the title text.
The number used as an example is the approximate distance from the planet Earth to the planet Jupiter as of the release day of the comic on June 12th 2020, in inches (1 inch = 2.54 cm).
Two days after the release of the comic the following text could be found on Jupiter info on The Sky Live.
The distance of Jupiter from Earth is currently 640,084,108 kilometers, equivalent to 4.278698 Astronomical Units. Light takes 35 minutes and 35.0908 seconds to travel from Jupiter and arrive on Earth.
64,008,410,800,000 cm / 2.54 cm/inches = 25,200,161,732,283 inches - much less than the number used in the comic. But Jupiter's distance to Earth changes quite quickly, and was decreasing at the time of the release of the comic.
According to a graph of the distance as a function of time on The Sky Live, the distance on the release day was 643.1 million km. This will give 25.3*1013 which the used number will round to.
The used number 25,259,974,097,204 is equivalent to 641.6 million km. On June 13th the distance is given as 641.7 million km in the graph on The Sky Live, very close to the number used. As this was the day after the release of this comic, it seems like Randall used a different distance than the exact one for the release day. He may have also used an average for June which would be 642 million km based on the average of the distance on June and July 1st.
Table of types[edit]
Number Type of person Notes
25,259,974,097,204 Normal Person This is the full number, 25259974097204, written out in the normal fashion, with commas to indicate powers of 1000. Although writing out the number in full is indeed a common action for normal people, the specific comma convention depicted here is only considered normal in the anglophone world; conventions for writing large numbers in full vary considerably across cultures. For example, in countries where the period is used as a decimal separator (including Europe outside the UK), one would write the number as 25.259.974.097.204 (or 25'259'974'097'204 in Switzerland, or 25 259 974 097 204 in Poland, France and Estonia). Under the Indian numbering system, this number would be written as 2,52,59,97,40,97,204 or “two nil, fifty-two kharab, fifty-nine arab, ninety-seven crore, forty lakh, ninety-seven thousand, two hundred and four.”
25 Trillion Normal Person This is the number, rounded to trillions in the normal fashion.
25 Billion Old British Person In current English usage, across the Anglophonic world with some hold-outs, an n-illion means 10^(3n+3) as per the short scale system popularised by American influence in international trade, so a trillion means 10^12, as above. However, older British English use had an n-illion meaning 10^(6n) (i.e. the simpler calculation of million^n), so a billion meant 10^12. The change stems from a 1974 commitment by Harold Wilson, the Prime Minister of the UK at the time, to change from the long scale (previously often described as the British system) to the short one for all official purposes.
Though not instantly widely adopted for common usage, the mid-'70s could therefore be considered the key turning point between when an older or younger British person learns (as the change filters through the system at various stages of education) what their "Billion"s and "Trillion"s are supposed to represent.
As well as 'traditionalist' British use, the long scale is widely used in the non-Anglophone world, in local language versions, though while the British system tended to infill n-and-a-half powers of the million with the term "thousand n-illion", the suffix "-illiard", or equivalent, is often used for the thousands multiple directly atop the respective "-illion" point.
2.526×1013 Scientist This number is formatted in scientific notation, using the exponent 1013.
2.525997×1013 Scientist trying to avoid rounding up Using as many decimal places as necessary until hitting a digit (0-4) that results in rounding down, even if it goes against the common scientific practice of reporting the correct amount of "significant figures". A previous version of the comic had a typo (the number was 2.5997x1013), but Randall updated the comic.
2.526e13 or
2.526*10^13
Software developer The first example is how the number would be expressed as a floating point number in scientific notation in most common programming languages. The second example is a technically correct way of expressing the same thing in some programming languages in which exponentiation is indicated by the ^ operator. However writing it that way instead of the first way could be considered quirky, as it is written as an instruction to the computer to calculate the product of a number with 10 raised to power 13, instead of just writing the number (although in many situations the compiler or preprocessor would detect this and solve it correctly, making it functionally identical to the first case). A software developer might write it that way if they are a novice who is not familiar with the first notation, or they could simply have an personal preference that considers the second version easier to read. Perhaps an additional joke for the second version is that it is the standard scientific notation with the x for multiplication and superscript for raising to a power replaced with the notation used in many programming languages of * and ^, i.e., a software developer writing down a number in scientific notation, not necessarily while writing a program, would by habit write a * for multiplication and a ^ for exponentiation.
25,259,973,541,888 Software developer who forgot about floats The two most common computer floating-point formats are the IEEE 754 single-precision and double-precision representations. These are binary floating-point formats, representing numbers as the quantity a × 2e, for some fractional number a and exponent e. Both the values a and e have a fixed size in bits, and therefore a finite range. In single-precision, a and e have (effectively) 24 and 8 bits, respectively, while in double precision the effective sizes are 53 and 11 bits.
Fully representing the number 25,259,974,097,204 (in any format) requires at least 45 bits. Therefore this number cannot be represented exactly as a single-precision float. The closest possible representations are 0.717931628 × 245 and 0.717931688 × 245; these work out to 25,259,973,541,888 and 25,259,975,639,040, respectively. Of these, the one ending in 888 is considerably closer to the original, so is chosen due to rounding. (Naturally these numbers are represented internally in binary, not decimal; the actual representations, in hexadecimal, are 0.b7ca5e × 22d and 0.b7ca5f × 22d.)
In many programming languages, the keyword to request a single-precision floating-point variable is float, while the keyword to request double-precision is double. It is an easy mistake to make to forget about the limited precision available with type float, especially since its name sounds like what you want for "floating point". (Had the programmer remembered to use type double, the number 25,259,974,097,204 could have been represented exactly (still in hexadecimal), as 0.b7ca5e43c9a000 × 22d.)
1013 Astronomer For extremely large distances, astronomers typically only care about orders of magnitude, e.g. whether a number is 1013, as opposed to 1012 or 1014. Randall often jokes about the lack of precision needed by astronomers, such as in 2205: Types of Approximation where the astronomer-cosmologist is equally willing to make pi equal to one, or ten. The original number is rounded to the nearest power of ten.
{∅,{∅},{∅,{∅}},{∅,{∅},{... Set theorist The natural numbers can be constructed in a set theory in various ways. In the most common of these, the Von Neumann ordinals, the natural numbers are defined recursively by letting 0 = ∅ (the empty set), and n + 1 = n ∪ {n}. So, every natural number n is the set of all natural numbers less than n, and since 0 is defined as the empty set, all numbers are nested sets of empty sets. Note that writing out a number in this form requires an exponential number of characters - that is, n + 1 requires over twice the characters as n does to write out. Thus, this method could not be finished, as it would require more data to be stored than there is matter in the universe to store it.
1,262,998,704,860 score and four Abraham Lincoln In the Gettysburg Address, Lincoln speaks the number "87" as "four score and seven" ("score" meaning "20"). Base-20 or vigesimal numeral systems are or have been used in pre-Columbian-American, African and many other cultures. In French it is used only for higher numbers (e.g. 92 = quatre-vingt-douze). In English it can appear in certain archaic and classic contexts, such as the King James translation of the Bible ("threescore years and ten" to be the life expectancy of a human according to Psalm 90:10). In these cases, a number is written in "score" (multiples of 20) plus a remainder. In this case 1,262,998,704,860 * 20 + 4 yields the exact number.
10^13.4024 (title text) A person who has come back to numbers after a journey deep into some random theoretical field In some fields of mathematics, especially those dealing with very large numbers, numbers are sometimes represented by raising ten (or some other convenient base) to an oddly precise power, to facilitate comparison of their magnitudes without filling up pages upon pages of digits. An example of this is Skewes's number, which is formally calculated to be eee79, but is more commonly approximated as 10101034. 13.4024 is a rounded version of the common logarithm of 25,259,974,097,204 (log10 25,259,974,097,204 = 13.4024329009); thus, this "format" is still mathematically correct, but uncommon. However, only by using many more digits will the result get close enough to be rounded to the original number 10^13.40243290087302 = 25,259,974,097,203.5, which would round up to the correct number. The number from the title text, 10^13.4024 = 25,258,060,548,319.6, differs from the original number by over a billion.
Transcript[edit]
[A panel only with text. At the top there is four lines of explanatory text. Below that are 2 columns with 5 rows of number formats. Each numerical format is in red, with black text explaining the format below it.]
What the way you write large numbers says about you
(Using the approximate current distance to Jupiter in inches as an example)
25,259,974,097,204
Normal person
25 trillion
Normal person
25 billion
Old British person
2.526x1013
Scientist
2.525997x1013
Scientist trying to avoid rounding up
2.526e13 or 2.526*10^13
Software developer
25,259,973,541,888
Software developer who forgot about floats
1013
Astronomer
{∅,{∅},{∅,{∅}},{∅,{∅},{...
Set theorist
1,262,998,704,860 score and four
Abraham Lincoln

 add a comment! ⋅  add a topic (use sparingly)! ⋅  refresh comments!
Discussion
Wouldn't Lincoln be: Two score and nine score and six score and fourteen score and seven score and one score and eighteen score and two score and three score score and four? 162.158.155.194 11:25, 14 June 2020 (UTC)
Or rather: Two score score score score score score score score score score and nine score score score score score score score score score and six score score score score score score score score and fourteen score score score score score score score and seven score score score score score score and one score score score score score and eighteen score score score score and two score score score and three score score and four. Tracy Hall (talk) 06:18, 16 June 2020 (UTC)
What format did you use? Mine was ((((((((2*20+9)*20+6)*20+14)*20+7)*20+1)*20+18)*20+2)*20+3)*20*20+4 162.158.158.249 12:26, 17 June 2020 (UTC)
Two score and nine score make eleven score, as opposed to (two score and nine) score. I could tell that expression was what you meant, but what you actually wrote translates back to 2*20 + 9*20 + 6*20 + 14*20 + 7*20 + 1*20 + 18*20 + 2*20 + 3*20*20 + 4, because there is nothing in the English to tell you where parentheses should be placed. If you multiply out your expression to get rid of all the parentheses, it becomes what I wrote. Tracy Hall (talk) 07:47, 18 June 2020 (UTC)
Oh. I see. Thanks for explanation. 141.101.98.130 12:58, 18 June 2020 (UTC)
I've added the way I'm familiar with (Polish) to the "normal person in Europe outside of UK" caveat, but I think this still might be over-generalization to say that all Europe outside UK uses "." separator; I've actually never seen it used, but I've seen "'" used, even though I have no connection whatsoever with Switzerland. 162.158.154.175 11:13, 13 June 2020 (UTC)
Yes. We also use the single apostrophe as a thousands separator in Sweden. And in Excel we use the semicolon in formulas, since the comma is used for decimals.
Embridioum (talk) 22:18, 13 June 2020 (UTC)
No!? Swedes commonly use blank as thousands separate, eg. 6 500 000. --162.158.183.119 19:06, 14 June 2020 (UTC)

Would love an explanation of the scientist avoiding rounding one. Would make sense to me with 2.525997..., but as 2.5997... I'm at a loss! 198.41.238.106 (talk) 22:19, 12 June 2020 (UTC) (please sign your comments with ~~~~)
Truncating the number just before a digit less than 5 so that the final digit is not rounded up. (I do this all the time, and, I am a scientist.) 108.162.216.172 (talk) 00:48, 13 June 2020 (UTC) (please sign your comments with ~~~~)
(The above was posted (anonymously?) seconds before I could get mine in, so here it is in the original format.)
This is probably completely irrelevant but it seems Randall made a small typo when trying to show a "Scientest trying to avoid rounding up." I assume it should be 2.525997*10^13. It seems he left out a 5 and a 2 and I say such because whether he forgot the 52 or 25 is up for debate.
Relevant screenshot: [[1]]
Also, if I'm just being completely daft and am missing something completely, please feel free to criticize me harshly and I'll go back to my little hideyhole. 108.162.237.24 22:21, 12 June 2020 (UTC)
In reality, a scientist would probably say 6.416*10^13 cm. (Although possible counterpoint, this comic is really about the number 25,259,974,097,204, not the distance 25,259,974,097,204 inches.) 172.69.33.207 22:47, 12 June 2020 (UTC)
Centimetres are not an SI unit. it would be 6.416*10^11 m 172.68.255.14 01:51, 13 June 2020 (UTC)
Depends on field. It can easily be 35.67 light minutes. Or 2140 light seconds if you insist on SI units. -- Hkmaly (talk) 22:11, 13 June 2020 (UTC)
MATHHACKED8192: You could also use 641.6 Gm. 172.71.254.114 21:40, 15 January 2023 (UTC)
I believe the "2.5997" was intentional, or at least I thought it was when reading it. At first I thought it was a typo, but Randall calls that number "Scientist trying to avoid rounding up" which makes me think Randall intentionally made that "mistake" as if the scientist had accidentally forgotten the first two digits (25) and used the remainder of the number (259974...), rounding it to "2.5997x10^13" Kirypto (talk) 23:03, 12 June 2020 (UTC)
Randall fixed it! Gvanrossum (talk) 05:43, 13 June 2020 (UTC)
Looks like that was just a typo, Randall replaced it with a new version. Natg19 (talk) 02:55, 13 June 2020 (UTC)
As a (not so?) old British person, I approve. Let the Trillions come around later, when it's worth increasing the prefix to "level 3". Don't waste them on the more petty numbers. 162.158.155.122 23:13, 12 June 2020 (UTC)
I'm also a not-so-old British person, and therefore use the short-scale as a matter of course. But, although I'm too young to ever have used the long scale, I regret its passing, for all that. On a visual level, if a million gives us a chunk of six zeroes, there's a simple elegance to the "bi-", "tri-", "quad-" (etc.) prefixes numerating two chunks, three chunks, four chunks, etc. From a less visual, more linguistically neat perspective, if you've got a million^2, a million^3, a million^4 and so on, then using "bi" to mean two, "tri" to mean three, "quad" to mean four makes sense...because that's what those things mean.Yorkshire Pudding (talk) 10:32, 13 June 2020 (UTC)
"Engineering" notation omitted?
I find it somewhat strange that Randall doesn't offer 25e12 or any of those variants (25.259...*10^12). I feel like a lot of "non-normal" people would map billion to E12 instead of requiring a single digit to the left of the decimal point. shrug JohnHawkinson (talk) 23:09, 12 June 2020 (UTC)
Honestly I thought "engineering" notation was a myth invented by HP's calculator division. But I'm personally offended that the programmers' notation 25_259_... was omitted. Maybe Randall still uses Python 2. :-) Gvanrossum (talk) 05:47, 13 June 2020 (UTC)
Well, just because HP's calculator division invented something doesn't mean it's a myth. They do have the power to invent things and had the market penetration for their names to have power and influence the world; but for sure, having used HP calculators in high school affected how I thought about numbers in college. But I think anyone who works with SI prefixes on a regular basis and reports results using them will appreciate "engineering" notation given the direct correspondence. And, of course, it also corresponds to how "normal" people use write numbers in the millions/billions/trillions, as this comic shows…which was the point… JohnHawkinson (talk) 12:03, 13 June 2020 (UTC)
Engineering notation is what engineers use all the time to make the maths simpler (one quip is an engineer is a physicist with poor maths). Except for the 'everyday' centimetre and decimetre, SI unit names are all in 10^3 steps. RIIW - Ponder it (talk) 18:56, 15 June 2020 (UTC)
Yeah, he missed engineers and technicians, who would say 25.3x10^12 or 25.3 Tera(units). We never use scientific notation.
"What's an inch?" 162.158.62.119 23:18, 12 June 2020 (UTC)
The imaginary nano-scale multiple of the speed of light times Planck's constant. Which, dimensionally, would seem to be kg.m³/s²? 162.158.154.73 00:15, 13 June 2020 (UTC)
As an article pointed out to me the other day that seemed obvious after it was said it's a non-tariff trade barrier used as American protectionism that doesn't get tariffed back. 172.69.63.81 (talk) 00:10, 13 June 2020 (UTC) (please sign your comments with ~~~~)

Can someone explain the set theory notation? 172.68.255.14 (talk) 01:56, 13 June 2020 (UTC) (please sign your comments with ~~~~)
You can use only sets to construct the natural numbers, see https://en.wikipedia.org/wiki/Natural_number#Constructions_based_on_set_theory - 172.68.215.76 (talk) 02:20, 13 June 2020 (UTC) (please sign your comments with ~~~~)
It seems nobody has pointed out that the power of 10 in the title text is really just the log(x) of the number, which is in fact very common in scientific contexts -> log(25,259,974,097,204) = 13.4024 Ianrbibtitlht (talk) 02:31, 13 June 2020 (UTC)
The alternative would be for him to write 10^13.402432900872993447734410070128 (Rounded up). Notation that produces a longer string of digits than the original number seems useless on all fronts but somehow even more fun. I like the current explanation, though. It was insightful, IMO. -B- 162.158.106.126 17:14, 13 June 2020 (UTC)
We have kept the olden ways here in the north. Miljon (10^6), miljard (10^9), biljon (10^12), biljard (10^15). Also, "biljard" is the same word as the game of pool in Swedish. Embridioum (talk) 07:17, 13 June 2020 (UTC)
Another thing an Older British Person might argue about is Billiards, the cue-and-ball game. Often, among all the vaiations, it was the three-ball version (white and white-spot cueballs, for each player, and red ball as the common target) on either pocketted or non-pocketted tables (the former mostly as a sop to using an unmodified snooker table) or, explicitly, Bar Billiards with target holes and obstacle pegs (quite common as early coin-operated pay-to-play tables). Only by succumbing to the americanism was Pool (usually 15-ball, spots+stripes+8ball) ever called billiards. Well, I thought that was interesting... 162.158.159.136 12:49, 13 June 2020 (UTC)
"Why sure I'm a billiard player, certainly mighty proud to say, I'm always mighty proud to say it. I consider that the hours I spend with a cue in my hand are golden." -Harold Hill 108.162.216.60 14:34, 13 June 2020 (UTC)

Also Italian uses the long scale for large numbers, and also in Italian the word for the game of pool coincides with 10^15. Albeit I have to say that I've never heard anyone use bilione and biliardo referring to numbers. We usually stop at miliardo, saying things like "un milione di miliardi" when we need to say those large numbers, or use the scientific notation. --172.68.198.106 09:04, 13 June 2020 (UTC)

While we're on different languages, how about this one: 1262998704860-vingt-quatre - French person. --IByte (talk) 11:11, 13 June 2020 (UTC)
Russian uses the short scale, like million, billion, trillion, quadrillion, etc. But it calls a billion a milliard, and a thousand milliards is a trillion. Why? 172.69.68.195 18:09, 13 June 2020 (UTC)
Sounds to me like Russia 'inherited' Milliards from its usage by trade partners at one point in time when that was a number people were starting to want to use seriously, but adopted the short-Trillion from a later time when (different) people were needing to discuss higher values and adopt terms for these into their own tongue. If you check the chequered history of what-means-what (before Short and Long scales were mad3 at least self-consistent among their adherents) you could reasonably blame/credit many different sources for each development. 162.158.158.249 01:03, 14 June 2020 (UTC)
A French person would write it the same way as an old British person, but add a silent "s" at the end of "billion" to pluralize it ("25 billions"). Actually, that's how a pedantic French person would do it, because the average Jacques would probably just write it "25 mille milliards" — and an illiterate cheese-eating surrender monkey would most likely spell it "25 milles millards" (source: I'm French).--108.162.229.234 12:44, 20 June 2020 (UTC)
My habit (as British) is to treat a million (and the rest) like a sheep (the plural of "sheep" being "sheep") when dealing with it as a(n apparently) definite number, but not when being used as a (possibly hyperbolic) grouping term. "There are at least a million sheep in this field, there are over two million sheep in that field. That's more than three million in total. How can millions of sheep fit into two small fields?" When hearing "How many sand grains in that pile of sand? There are at least six thousands.", it comes across as not being either truly English as I know it, and/or not as accurate as it may be intended to be. Similarly ten fish in a tank is 10 fish, but tens of fish in a tank could easily be "10 tens" of fish, or more, which is at least a hundred, if not hundreds! And probably still none of them know how to drive it. 141.101.98.130 14:37, 22 June 2020 (UTC)
Why *that* number? OK, so it's a big number (well, maybe not compared to all the other numbers). One oddity is that the prime factors are:
2 2 7 11 82012902913
7 11? Subliminal advertising? If you turn the big prime upside-down calculator style, you get: eigzogzlos8
I'm surprised that 5 and 23 are missing. In fact, that's almost suspicious.
I think you're overthinking this, or maybe you got nerdsniped. Randall probably just chose a large number with different digits and being a fan of space, this one worked for him. Bischoff (talk) 08:40, 14 June 2020 (UTC)
I thought in all or most of Europe the thousands separator was a space not a dot. --162.158.238.4 03:09, 14 June 2020 (UTC)
That's actually something interesting I learned from this explanation. I always assumed everyone either used commas (US and UK) or dots (pretty much the rest of at least Europe, never thought much about other continents in this regard) and grouped them in threes. Apparently I was very wrong. The Indian system of grouping digits looks a bit confusing to me, but apparently it corresponds well to their language. Bischoff (talk) 08:32, 14 June 2020 (UTC)
Please refrain from using new sections in the comment section! --Kynde (talk) 06:43, 14 June 2020 (UTC)
What's so bad about them? At least in a comic like this one, where people are actually discussing/commenting on different aspects of the comic, I find sections very helpful to keep track of different conversations. Bischoff (talk) 08:22, 14 June 2020 (UTC)
I'm curious about this too. Being able to break up the conversation into topics would seem on the face of it to be quite useful. Jkshapiro (talk) 03:27, 23 December 2020 (UTC)
Re: Software developer, the "power" operand varies wildly across programming languages, some do indeed use ^, some go for ** and some have to resort to something like a pow(x,y) function, but in the languages/dialects I use most the ** operator binds closer than (has order of precedence over) the * operator, so x*10**y would not be (10x)y as currently suggested in the Explanation. But ^ is the bitwise operator (lower precedence than *), so would do something even more 'interesting' to the result. Now, obviously, different codes for different coves and all - but I'm dredging my memory for all kinds of obscure scripting languages I've not used for years (what does COBOL do..? Forth is Reverse Polish. Lisp(is(more(Forward(Polish))))) not sure which one Randall is basing it on (if it's not just geek-sniping at its finest). 141.101.107.234 10:47, 14 June 2020 (UTC)
The link I provided for "every common programming language" which someone edited to say "most common programming languages" is a site that shows what some code snippets look like in some huge number of languages that includes all the common ones. That's why I said "every" for supporting the scientific notation with e for the exponent, it really is all of them. There is much more variation in the syntax for exponentiation, more using ** than ^ and quite a few only having a function to call instead of an operator symbol. However, every one that does use ^ for exponentiation would parse x*10^13 be x times the 13th power of 10. Bugstomper (talk) 06:25, 15 June 2020 (UTC)
Speaking as a set theorist, I'd also describe that number as "Pretty small, just slightly bigger than 1." 162.158.154.73 11:44, 14 June 2020 (UTC)
No comment in the explanation about the fact that inches are a pretty inadequate unit to express astronomical distances in the first place?162.158.155.224 08:57, 15 June 2020 (UTC)
I actually thought it funny that using inches in the first place is telling in itself a lot about who one is (most likely American, or at least from the Anglo-sphere).
The set theory bit is a bit too specific, and also not specific enough. This construction (the Von Neumann natural numbers) doesn't rely on details of the underlying set theory, so it will work just fine with theories other than the Zermelo-Fraenkel one. On the other hand, there exist other (less popular) constructions of the natural numbers using set theory, including one by Zermelo. Dfeuer (talk) 21:33, 15 June 2020 (UTC)
set=∅=Empty set
0 set() 1 {set()} 2 {{set()}, set()} 3 {{set()}, {{set()}, set()}, set()} 4 {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()} 5 {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}} 6 {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}} 7 {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}} 8 {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}} 9 {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}} 10 {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set(), {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}, {{{set()}, {{set()}, set()}, set()}, {set()}, {{set()}, set()}, set()}}} 18:55, 05 May 2021
Categories: All comicsComics from 2020Comics from JuneFriday comicsComics with colorProgrammingMathAstronomyScienceComics featuring politiciansComics edited after their publication