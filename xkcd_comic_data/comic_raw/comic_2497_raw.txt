We still need to complete some explanations like this one: 1608: Hoverboard. All incomplete explanations are here.
Never use the Math markup language at the transcript. The reason for this you can read at the Editor FAQ.
2497: Logic Gates
Explain xkcd: It's 'cause you're dumb.
(Redirected from 2497)
|<< PrevComic #2497 (August 2, 2021)Next >>|
Logic Gates

Title text: In C, the multiocular O represents the bitwise norxondor gorgonax.
Explanation[edit]
The comic lists logic gates. The first six are real but the last six are made up and get increasingly absurd. The names for these last six use the same letters and syllables as the first six so as to appear at a glance to be consistent with their naming conventions.
Some of the ways the gate parts are combined seemingly-impossibly can raise ideas in the mind of the reader of how quantum computing involves processing multiple possibilities at once, or how machine learning involves solving systems backward from their outputs to their inputs. The names ring of calling more and more profoundly to some mythological catastrophe.
Name Explanation
AND gate An AND gate outputs true if and only if both inputs are true. (Inputs 1 and 2 must be true.)
By convention it is a symbol with a flat input end leading to a semicircular output end.
OR gate An OR gate outputs true if one or the other or both of the inputs are true. (Input 1 or 2 may be true.)
By convention it is a symbol with a concave input edge leading to an output end resembling a gothic pointed-arch, turned to point onwards.
NOT gate A NOT gate outputs true if and only if the input is false. (The sole input must not be true.)
The convention for the isolated NOT gate is to be a triangle (reminiscent of a diode or op-amp comparator), that conspicuously points in the direction of logical passage, tipped with a circle.
NOR gate A NOR gate outputs true if and only if both inputs are false. (Neither 1 nor 2 must be true; alternately interpreted as it must not be true that either 1 or 2 are true.)
The symbol is the OR shape with the NOT-circle at its tip.
XOR gate A XOR (short for "eXclusive OR") gate outputs true if one, or the other, but not both of the inputs are true. (Mutually excusively, either 1 or 2 must be true.)
This symbol is the standard OR one but with a further concave line stood-off slightly from the usual one to connect to the input lines to distinguish its more discriminating behaviour.
NAND gate A NAND (short for "Not AND") gate outputs true if one or the other or both of the inputs is false. (It must not be true that both 1 and 2 are true.)
The symbol is the AND gate with the NOT-circle at its tip.
NORX gate A single feedline leads into a standard OR-style input end, while two lines are seen departing from an AND-style output front.
If the gate obeys only AND logic and the input is not internally duplicated for the purpose then the result would always be false.
If the gate uses OR logic and/or the input is internally used for both traditionally-required inputs, then the output would be exactly of the state of the original input.
The two outputs appear to be duplications (unlike Out And Not Out pairings) so the overall effect may be to act as a non-interfering 'splitter' gate.
Alternately, if the single input carries a superposition of two signals (see NORG XORT, below) then this might be teased apart into two inputs, internally, processed (optionally making a new superposition of AND and OR results upon the separated inputs) and propagating onwards into two different and deliberately unentangled (but possibly still each superpositonal) outputs for further quantum processing.
(There are no NOT-type or XOR-type elements to the diagram, yet it is notable as being a partially-rearranged anagram of "XNOR Gate".)
GAND Ate Two inputs feed into an AND-style receiving end. The presumed output end features a mirrored XOR input design complete with two connections onwards.
Assuming it still accepts inputs from the left and produces outputs to the right, it is possible this gate initially acts as an AND-gate to the inward pair but then (randomly?) generates output signals that would, as inputs to an XOR, produce the same output. That is, if both inputs are true then the two outputs are paired as one as true and one as false (in either order); for any other inputs both outputs are in the same and identical (not-specified) logic-state.
(The name is a spoonerism of "AND Gate", but may not necessarily have any meaning beyond that.)
XAND Gort Two inputs, unconventionally, feed into what is otherwise a perfectly standard NOT-symbol with the traditional single output.
How a single NOT is intended to handle two inputs and merge them is not obvious. All obvious functions are already met by existing two-input gates. Perhaps it is logically identical to the NOR gate, but drawn and named to express its nature as "not A and not B" rather than the less intuitive equivalent "not (A or B)".
Or possibly this is intended to create (and then invert) a combined quantum superposition of the two singular input feeds and therefore act as a form of signal multiplexer.
(The name seems only trivially related to the gate names associated with the drawn elements of functionality. "Xand" is a familiar form of the name "Alexander" that is sometimes used for major figures in fantasy novels for its striking "X", while "Gort" is the name of a particularly powerful alien robot seen in various versions of the film The Day The Earth Stood Still. Neither of these facts may bear true relevance, however.)
NORG Xort The initial input end resembles an XOR gate, but with 'negation'-nodes unconventionally sited where the inputs lead inwards. The output end is given a NAND appearance.
An XOR gate should not ultimately react any differently with both inputs pre-negated, compared to how the straight inputs would be handled, but the promise of NANDness may not make things quite so simple, without straying into the possibility of quantum-logic (as suggested above) where it may 'merely' be just highly complex to understand.
(The name given references NOR and XOR, but may be entirely divorced from any logical interpretation of its logical implications.)
ANDORX Gant Two inputs appear to feed into an OR-receiving end-cap, but this transitions into feedlines into a follow-up XOR-receiver, which in turn transitions (without output-capping) into two output tracks each with an 'orphaned' NOT-node upon them.
Generously, it could be interpreted as an OR-gate whose internal result is sent to one output track while the opposite is output to the other track, then both are inverted. Or quantum (re-)superposition and separations may again be at work in this case in ways hard to narrow down.
(The nominal title is yet further lacking in obvious logic, starting with a possible rearrangement of XOR and AND followed by part of GATE with an N inserted. "Gant" could possibly be a reference to a particular sportswear manufacturer/retailer. There is, of course, also the Gantt chart.)
NORXONDOR Gorgonax Two inputs lead into a (N)OR-like entry, the continuing sides of which repurpose as connectors leading through a pair of full anti-parallel NOT gates, before resuming drawn purpose as a NOR-gate output tip.
It is possible the peculiarly placed NOTs are acting as indications of some kind of two-way signal filter/rectifier, if they were to be taken seriously.
(The gate name, however, is a bizarre construct that may even be echoing fantasy/mythology references, such as Gondor and the Gorgon.)
The only real-life logic gate that was omitted is the XNOR gate (short for "eXclusive Not OR"; it compares the inputs, and if and only if they are equal, it outputs true). Note that the "NORG XORT" gate would be logically equivalent to it, if it were tipped to match its uniquely XOR-style tail, since it would then be an XNOR gate with NOT on both inputs, a modification that has no ultimate effect on the logic as it merely switches the case of which exclusivity it needs to be, and does not care which version of same-input it might be responding to.
A double-NOT on an input would produce the identical output again (...if the input is not not true). Two NOTs preapplied to a (N)AND or (N)OR would produce the same output as a (further-)NOTed version of the (N)OR or (N)AND, conversely (...if not-1 and not-2 then this also means that neither 1 nor 2). Normally this would be shown, if necessary, as full NOT gates on the lead-in inputs but (see Transcript, below, and the NORG XORT description above) the shortcut element is occasionally used in further mix'n'match symbology (together with reinterpreting connectivity lines as partial shape-edges and vice-versa) in 'understandable' but definitely non-standard ways.
Along with the deliberate confusion of connector and shape-edge lines, directionality is also played with in several cases, with input 'ends' perhaps also at the (implied) output end and reversed sub-symbols implying a composite gate with substructural feedback or perhaps diode-rectification upon a bidirectional logic path.

Much like 2360: Common Star Types, as the list progresses, the names start to sound more like mythical creatures, closing with the "Norxondor gorgonax". As with the symbology, the names appear to be nonsensical recombinations of the standard ones (perhaps with off-subject inspirations, in some cases) but often do not match up with the symbolic (mis)use, such as an X in the name not implying/being implied by an XOR's unique drawn feature.
In the title text Randall claims that in the programming language C the multiocular O (ꙮ) character, an exotic glyph variant of the Cyrillic letter O, is used to represent the bitwise version of the last operator Norxondor gorgonax (presumably ꙮꙮ represents the non-bitwise version), fitting as the multiocular O is used to refer to "many-eyed seraphim" (angels) in some religious literature. Gorgons (beige or otherwise) have heads covered with snakes instead of hair, and so possess multiple eyes, the most famous was known as Medusa (she was depicted in 1608: Hoverboard). The ꙮ character abstractly inspires ideas of great otherworldly demons like those of the Cthulhu mythos.
C is a low-level programming language, and as such, it has many operations that correspond to logical (i.e. bitwise) operations. These contrast with operations that work in a non-bitwise way. For example, "&&" is the non-bitwise "AND" operator that takes the operands as a whole, while "&" is the bitwise "AND" that combines the respective bits of its two inputs independently before spitting out the new single composite value the output bits represent. In non-bitwise operations, 0 always represents "FALSE", while any non-zero value means "TRUE" for inputs, and 1 is used to represent TRUE for outputs. Thus, "14 && 3" gives the result 1: TRUE AND TRUE -> TRUE. In the bitwise operation, using the same values, the decimal value 14 has the binary value 1110 and the decimal value 3 has the binary value 0011, and for this example we get:
  1110 = 14
& 0011 =  3
  0010 =  2
Transcript[edit]
[The comic shows a chart with twelve electronic logic gates arranged in three rows of four. Each gate is depicted as a schematic symbol, with a label underneath. Above them is a header:]
Common logic gate symbols
[Here below follows a description of the 12 gates in the three rows, with their label given beneath each description:]
[A standard gate symbol used in real life. Two inputs on the left lead to the vertical left edge of a solid D-shaped symbol. From the right side of the D there is one output.]
AND gate
[A standard gate symbol used in real life. Two inputs on the left lead to a convex-crescent left edge of a crescent-shaped symbol. The right side of the crescent symbol's shape forms a point at its output. From the right side of the crescent there is one output.]
OR gate
[A standard gate symbol used in real life. One input leads to a triangular symbol pointing to the right. There is a small bubble symbol connected to the triangle on the output, which leads right.]
NOT gate
[A standard gate symbol used in real life. This is identical to the OR GATE, except the output has a bubble attached, like the NOT GATE's output.)
NOR gate
[A standard gate symbol used in real life. This is identical to the OR GATE, except the left-hand arc at the input has a double-stroked line.]
XOR gate
[A standard gate symbol used in real life. This is identical to the AND GATE, except the output has a bubble attached, like the NOT GATE's output.]
NAND gate
[An unusual symbol. This symbol has one input on the left leading to a convex-crescent left edge, like the OR GATE. The output side as a smooth crescent like the AND GATE but has two outputs.]
NORX gate
[An unusual symbol. This symbol has two inputs on the left leading to a vertical left edge input, like the AND GATE. The output side has a convex-crescent double-stroked output like the mirror image of the XOR GATE's input. There are two outputs.]
GAND ate
[An unusual symbol. This resembles the NOT GATE except there are two inputs instead of one leading into the left side.]
XAND gort
[An unusual symbol. This has a double-stroked convex-crescent input like the XOR GATE, but the two inputs have bubbles attached. The single output has a smooth crescent shape with a bubble, like a NAND GATE.]
NORG xort
[An unusual symbol. Two inputs lead to a convex-crescent edge, and the two lines of this symbol now enter a double-stroked convex-crescent input like the XOR GATE. The two lines of -this- symbol have bubbles placed half way across their horizontal length, and are presumably the outputs.]
ANDORX gant
[An unusual symbol. The symbol is identical to the NOR GATE, except the upper and lower horizontal parts of the symbols hull have a NOT GATE placed on them - one pointing to the left on the upper line, and to the right on the lower line. There is one output to the symbol, with a bubble attached.]
NORXONDOR gorgonax
Trivia[edit]
If you want to test out how the logic gates work, click here.
There was a very famous computer programmer named Gates.

 add a comment! ⋅  add a topic (use sparingly)! ⋅  refresh comments!
Discussion
As someone has just Transcripted basically almost all the fine detail I had planned to entable in the Explanation, I shall not now create repetition. Though I had a little more description to the NORXONDOR GOGONAX, in particular, to reference bidirectional (antiparallel) diode pairings (e.g. an LED assembly that glows a different hue depending upon the applied current bias) as probable inspiration, and that latched Flip-Flops surely inspired some part of the Frankensteinian gate-types, too. 141.101.99.119 00:08, 3 August 2021 (UTC)
(Also, surprised there was no direct "GONDOR" reference. Or maybe that's because it was too obvious?) 141.101.99.211 00:12, 3 August 2021 (UTC)
I was also missing a "GONDOR" reference, and all the X's also made me think XEHANORT. 172.70.126.174 03:49, 3 August 2021 (UTC)
Never mind GONDOR, surely "The black GATES of MORDOR" should feature heavily? 11:45, 6 August 2021 (UTC)
...So, who's ready to draw up some truth tables? 172.70.126.211 01:22, 3 August 2021 (UTC)
I can't get the lines in the bitwise-operation example to align properly; the first one is indented a tad. Can someone please fix that? Thanks... BunsenH (talk) 04:11, 3 August 2021 (UTC)
The symbol for norx gate (1-input OR, two outputs) I'd read as a noninverting buffer to increase another gate's usable fan-out. Xand gort resembles the symbol for an op-amp. Given the subtraction that an op-amp does, the xand gort's truth table probably resembles that of the "implies" operator. Tepples (talk) 04:23, 3 August 2021 (UTC)
the "NORG XORT" is not equivalent to an XOR, as the symbol is round on the right. --141.101.69.186 06:39, 3 August 2021 (UTC)
Right, "NORG XORT" would be a XNAND with inverted inputs, though I don't know what the logic table from a XAND or XNAND gate would look like. If De Morgan applies to XAND/XOR the same way as with AND/OR, would a "NORG XORT" then be equivalent to a XOR ? 162.158.129.43 15:12, 3 August 2021 (UTC)
I think it is specifically a hybrid between XOR and NAND. The left edge is curved like OR, and the right edge curved like AND. I did spend some time thinking about XAND, though. One of my ideas was a >2-input AND that is only true if exactly 2 inputs are true. I wonder what qubit gates are like. 108.162.219.174 16:16, 3 August 2021 (UTC)
Logic Gates
It seems to me that their ought to be 16 possible logic gates. Although some would ignore one or both inputs. Algr (talk) 07:18, 3 August 2021 (UTC)
Yes. The 74181 4-bit arithmetic logic chip implements all 16 possible binary logic operations. See https://en.m.wikipedia.org/wiki/74181 162.158.94.253 07:34, 3 August 2021 (UTC)
It doesn't say the names of the various gates. On my list I made up a few, like "Only B" that only returns true if B is true and A isn't. Are their real names for this? Algr (talk) 18:57, 3 August 2021 (UTC)
I could suggest "Unless" (as in 'B unless A', or maybe to counterpart 'A unless B' with standard order of operands, 'A disallows B'). Though the partially composite construct '!A && B' would be easier to grasp by those already handling logic statements, I think. 141.101.76.78 19:24, 3 August 2021 (UTC)
https://en.wikipedia.org/wiki/Truth_function#Table_of_binary_truth_functions --162.158.126.135 23:02, 3 August 2021 (UTC)
So "Only B" is called "Converse nonimplication"?! Maybe I'm the only logical person. Algr (talk) 06:30, 4 August 2021 (UTC)
As Randall drew gates with two outputs, these would have 256 (16^2) possible functions 162.158.94.252 15:15, 3 August 2021 (UTC)
That couldn't logically be anything but two logic gates sharing the same input. Algr (talk)
When both inputs to the norxondor gorgonax are 0, the output is 2. 172.70.110.45 21:27, 18 November 2021 (UTC)
there should be a category of comics where it starts out like a normal list and gets weirder and weirder like Trig Identities 172.70.34.164 18:53, 3 August 2021 (UTC)Bumpf
What, no IMPLIES gate? I actually used this once to implement a NOT operation in a database see search. Joem5636 (talk) 11:00, 4 August 2021 (UTC)
Yeah, neither IMPLY nor NIMPLY, the only asymmetric gates where the inputs can't be arbitrarily swapped. IMPLY: 0,0->1; 0,1->1; 1,0->0, 1,1->1; NIMPLY 0,0->0; 0,1->0; 1,0->1, 1,1->0 162.158.91.2 15:25, 16 August 2021 (UTC)

It appears to me that the new gate names are just taken from the letters of the original gate names: NAND, NOR, XOR,and GATE. They're just stuck together in ways that tickled the creator's fancy. OK, tha's already been noted. 172.70.130.108 11:11, 4 August 2021 (UTC) 108.162.216.239 11:13, 4 August 2021 (UTC)
Unlike professional devs, I don't have a multiocular O key on my keyboard, so I verbosely write out __norxondor_gorgonax_bitwise everywhere in my code when writing kernel modules :-/ 172.70.110.44 22:57, 4 August 2021 (UTC)
You need a better keyboard. :-) BunsenH (talk) 23:35, 4 August 2021 (UTC)
Is it just me, or did the first four gates sound Seussy to someone else? "AND gate, OR gate, NOT gate, NOR gate." GreatWyrmGold (talk) 04:10, 5 August 2021 (UTC)
there should be a category of comics that start out with obvious/known things and get weirder and weirder like this. the only other one i can think off the top of my head is 2070: Trig Identities though 172.68.65.221 01:39, 13 August 2021 (UTC)Bumpf
NORG might be a reference to the boss of the same name in Final Fantasy 8 --162.158.89.10 10:22, 21 August 2021 (UTC)
“Stream Norxondor Gorgonax music”?[edit]
Predates comic. https://m.soundcloud.com/d3x Stream Norxondor Gorgonax music
i don't think it predates the comic, soundcloud allows users to change their displayed name freely; only the profile name (i.e. d3x here) is fixed. --162.158.91.80 17:10, 19 November 2021 (UTC)
Categories: All comicsComics from 2021Comics from AugustMonday comicsChartsProgramming