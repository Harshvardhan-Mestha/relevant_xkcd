We still need to complete some explanations like this one: 1608: Hoverboard. All incomplete explanations are here.
Never use the Math markup language at the transcript. The reason for this you can read at the Editor FAQ.
1479: Troubleshooting
Explain xkcd: It's 'cause you're dumb.
(Redirected from 1479)
|<< PrevComic #1479 (January 28, 2015)Next >>|
Troubleshooting

Title text: "Oh, you're using their Chrome APP, not their Chrome EXTENSION. They're very similar but one handles window creation differently." is a thing I hope I can stop saying soon.
Explanation[edit]
This comic revolves around the complexity of modern software and its sometimes low quality. Many problems that users experience are not obvious or straightforward, and methods for correcting the root cause of the problem requires invoking unrelated actions that happen to cause a desired side-effect. Knowing the non-obvious cause, the desired side effect, and how to trigger the unrelated feature that causes it requires memorization of lots of "stupid computer knowledge" rather than general principles and logical investigation of the software.
One particular example of an illogical fix to a software problem is depicted in the comic. Here, Cueball is trying to help Hairy resolve the problem of a program that is not responding to any mouse clicks. Cueball surmises that this is not due to abnormal behavior of the software (such as freezing), but rather because either the user or the software itself has opened a modal dialog window outside of the main screen area, where it can not be seen. Modal dialog windows block access to the rest of the application, by seizing the sole focus of the user input. They are valid GUI tools and are used when the software needs the user's input before it can proceed further. However, opening such a window and placing it outside of the visible screen area ("off-screen") will make the window both inaccessible and invisible to the user, precluding them from closing it and re-gaining access to the software.
One non-obvious way to repair such a problem is to switch the screen resolution; this in itself does not fix the problem, but the resolution switch also forces the operating system to redraw all windows on the desktop, and some operating systems will also validate the coordinates of all windows and adjust these coordinates so that the windows do not end up in off-screen area. In this scenario, it is used as a side-effect to fix the problem, because operating systems rarely provide other, more obvious ways to bring off-screen windows back to the visible area.
By saying "Why is that even possible?", Hairy is quite correct in pointing out that the best way to address this problem at its root would be for the operating system developers to prevent the creation of windows off-screen, preemptively avoiding a whole class of window management problems before they can occur. For example, such mechanisms could validate coordinates during window creation, thus making sure that the dialog window would always be accessible and visible. Such a mechanism exists on OS X, but not on Windows, which the majority of desktop/laptop computers are running at the time of this comic's release.
In general, one can sort the possible solutions to the problem being discussed in the following order of preference, from best to worst:
(Best): Have OS programmers implement automatic coordinate adjustment during window creation
Have OS programmers provide easily accessible and visible control to invoke coordinate adjustment for all windows
Have OS programmers provide a shortcut to invoke coordinate adjustment for all windows
(Worst, depicted in comic): Have users rely on side-effect of properly implemented screen resolution change mechanism to fix the problem counter-intuitively.
The title text refers to the fact that two different and unrelated software packages can have confusingly similar names, even if the usage and features of those two packages can vary wildly, and knowing the implications of using one instead of the other is a case of "stupid computer knowledge". Knowing the difference between a Chrome app, a cell phone app-style application, delivered from the Chrome web store, designed to be run in the Chrome browser, and a Chrome extension, a browser extension installed into the Chrome browser, delivered from the Chrome web store, designed to modify the behavior of the browser itself, is a subtle distinction that may not be immediately apparent to users who might just have the name of the software they are looking for. Google Hangouts is an example of a product that exists as both a Chrome app and a Chrome extension, whose windows are more similar to each other than to normal Chrome browser windows; and confusingly, it's possible to be signed into one account with the app and another with the extension, especially when your employer or school uses Apps for Business/Education.
In many cases, Randall (or Cueball, his avatar) loves to help people using his specific knowledge (see 208: Regular Expressions). But when the trick is "stupid", he would prefer the programmers to fix the problem definitively so he never has to rely on this trick anymore.
Transcript[edit]
[Hairy sitting at a desk with laptop, with Cueball standing behind him.]
Hairy: Wait, why can't I click anywhere?
Cueball: I don't... Ugh, It opened a dialog box offscreen.
Hairy: Why is that even possible?
Cueball: It really shouldn't be. But you can fix it by changing your screen resolution to trigger a window cleanup.
Hairy: Seriously?
Cueball: I know, I know...
To be honest, I can't wait for the day when all my stupid computer knowledge becomes obsolete.

 add a comment! ⋅  add a topic (use sparingly)! ⋅  refresh comments!
Discussion
You could also move the off-screen window back in view by Alt+Space, M to initiate window move, then press any arrow key and your mouse will then be able to move the window back into view. 108.162.249.223 (talk) (please sign your comments with ~~~~)
That's a solution that also relies on obscure knowledge (that modal dialogs have a Move command and the hotkey necessary to access it), so it isn't any better than the solution provided in the strip. AND it requires that the user know where offscreen the dialog is located. Mistakenly believing it is, for example, to the right of the visible screen and therefore moving it left will only make the problem worse it the unseen window is in actuality to the left already. Given the 75% or better odds that the user will guess wrong where the dialog lies, using the Move command would be a notably worse choice then changing screen resolution.- Equinox 199.27.128.120 16:25, 28 January 2015 (UTC)
Actually this does work for all Windows machines and something I've done repeatedly (it's a lot faster than waiting for your video card to repeatedly reconfigure the screen). Once you hit Alt-Space M followed by ANY arrow key, the window will actually be stuck to your mouse pointer; you click it to "drop" the window back onto the page. And yes, the idea that a keyboard arrow key will cause it to be mouse-driven makes no sense Odysseus654 (talk) 17:50, 28 January 2015 (UTC)
Exactly. Anyone with windows can test this. Still works in 8, it's been around since XP at least. 108.162.242.7 (talk) (please sign your comments with ~~~~)
Since at least 3.0 (and possibly earlier), when using a desktop computer with only a keyboard was a very real possibility. (Also, the window decorations in 3.0 and 3.1 suggested the keyboard shortcuts: Alt-Space activated the window menu represented by the long bar, Alt-Minus activated the window menu represented by the short bar in multiple document interface applications.) --199.27.133.101 07:46, 29 January 2015 (UTC)
And, once again, as Equinox noted up above, ALL THIS DISCUSSION is dependent on uncommon/obscure knowledge. We can argue until we're blue in the face about which is "quickest", but none of them are more than marginally better than the other, just different workarounds for the same problem that shouldn't be there anyway, which is the whole joke. At the end of the day, the technique you use depends on which bit of obscure knowledge you've randomly come across, not on which is the best method. 108.162.249.155 (talk) (please sign your comments with ~~~~)
I actually just use windowsbutton+Left or Right. Helps when a non responsive fullscreen game covers up the task manager. I can just move it to my other monitor. 108.162.238.157 20:46, 5 July 2015 (UTC)

As a matter of fact this is a common problem if you often use a dual screen setup with a laptop when you use it on the move without the second screen. If you just want to close the windows, a Esc on a alert windows or alt+F4 (or your system equivalent)will usually solve this problem. For resizeable windows, Windows offers the Win+left/right combination to move a window to specific parts of the screen. I don7t think you really need to change the resolution for this all the time, it's clearly overkill. Meneldal (talk) 06:40, 28 January 2015 (UTC)meneldal
On a dual screen setup you can use 'Win key + Shift + Left/Right key' to shift the window left or right between monitors. --Pudder (talk) 09:37, 28 January 2015 (UTC)
Note that the Win-left/right and Win-Shift-left/right key combinations are only supported in Windows 7 or later versions. 173.245.55.27 13:17, 28 January 2015 (UTC)
Yes, I'm also familiar with this kind of thing (the strip, I mean, not specifically the last comment). The general form is that a casual (or even expert!) user expects something from the interface but some historic programmer (of UI or application) has caused the 'obvious' continuity to fail, either by ommission (e.g. checking the placement bounds of a popover window) or by being too clever in some manner. The 'stupid knowledge expert' has encountered the problem enough times to: a) find a common root to the issues, and b) stumble upon a solution. (Like the "unstick the Windows-key flag" solution to suddenly getting Run dialogues, Explorer windows and sudden minimising-all to Desktop, seemingly randomly.) 141.101.99.120 08:29, 28 January 2015 (UTC)
It amazes me how many people assume Microsoft Windows. If you aren't using MS-Windows, the key combinations suggested in the discussion so far are useless. If you are using the X Window System, you might also be seeing a system modal dialog instead of an application modal dialog, in which case, you won't be able anything but talk to that window. (System modal dialogs are usually used for very transient things like popup menus.) Using X, the "cleanup" behavior also depends on the window manager, and neither X or the window manager are part of the operating system (that abomination is now pretty much just an MS-Windows thing). --Divad27182 (talk) 10:39, 28 January 2015 (UTC)
People tend to assume Windows because in the majority of cases that assumption is correct. In the minority of cases where the user isn't on Windows, those asking the question nearly always mention the fact in their question, or direct their question at an OS-specific topic/forum/website. --Pudder (talk) 11:21, 28 January 2015 (UTC)
Mac OS X also uses a baked-in window manager. There are a bunch of apps on OS X that brand themselves as `alternative WMs', but they're usually just a contrived way of tiling windows across the screen somehow (using the built-in WM). Wanting to use a proper tiling WM was what originally drove me to GNU/Linux, long live i3wm! Anyway, this comic could possibly be construed as being related to xkcd.com/934/, which complains about browsers implementing internal WMs in the alt-text. 141.101.99.103 11:45, 28 January 2015 (UTC)
An OS-X modal dialog is always a sheet attached to the relevant window, so it cannot run astray. If a window does somehow go astray, then the Mission Control zoomout of all windows will still bring it back within reach. 173.245.52.149 06:38, 6 February 2015 (UTC)
I think the first option (ALT-SPACE to access the window menu, M for the move option, arrow key, mouse movement) has a near-equivalent in pretty much any OS. 173.245.55.27 13:21, 28 January 2015 (UTC)
True, I have a vague feeling Ms Windows would prevent this in normal situation, whereas in X Window System this would be quite expected. Also, still problems with multimonitor in 2015: full screen programs want to open in the main monitor regardless the monitor their window is in and some programs open their dialogs in the left most monitor no matter what, which is a pain if that said monitor is a CRT projector that takes several minutes to warm up... 141.101.80.5 (talk) (please sign your comments with ~~~~)
Someone competent in web programming, please write an explanation of the title text Nyq (talk) 13:58, 28 January 2015 (UTC)
If I'm not mistaken (and I'm not an expert), a Chrome App is some sort of program (eg Flash based) that runs in the normal "browser space" - the area where you normally see web pages, and which can use Chrome features and controls. A Chrome Extension is a a program which runs in the background and can act on the browser space or the browser itself (eg open your downloads folder in a new tab with one click of a button). Extensions can also use Chrome features and controls. Sound about right? Jarod997 (talk) 14:34, 28 January 2015 (UTC)
Most likely he is on a laptop with an NVidia gpu which in recent driver versions often believe something is connected to the VGA port when this is not the case. The desktop will then think this area is valid, and allow windows to be opened there, in fact it is likely to be opened there because that part of the desktop is clean for windows and looks optimal for placing a new one. At least that is what has been happening to me for the last few months until I forced the VGA port off rather than wait for NVidia to fix their drivers or rolling them back to versions that would misrender recent games (both Windows and Linux drivers did this).108.162.254.98 15:41, 28 January 2015 (UTC)
Goddamned this sort of thing happens on my dual monitor setup all the time. The external will be at 1366x768, and stuff will be cut off. I change it to something else, and then revert the changes and it's perfect. I keep a shortcut to the Display settings on my desktop just because of this now. And in other, similarly stupid Windows-issue related news, it's 2009+6 and this crap still isn't fixed. Schiffy (Speak to me|What I've done) 16:22, 28 January 2015 (UTC)
The Chrome developer site [1] gives a breakdown on how Chrome apps and extensions are different. Apparently, you can have a Chrome app and a Chrome extension that do similar things, but the extension lacks the user interface, etc., and some of the more interactive features of the app. Aquarello7 (talk) 16:54, 28 January 2015 (UTC)
yeah, I'm not sure what the comparison is - I wonder what an example of a product that is both an app and an extension (that aren't COMPLETELY different, that is) - something like a url shortener or twitter assistant come to mind as possibilities, but even a novice user would likely not have trouble distinguishing between an extension (something embedded in the page, a context menu option, or a shortcut through the omnibox) and an app (full page, possibly even separate window type thing) once the differences were described - though I think you can accomplish window creation in an extension, it's not designed for it, so for a developer to make an extension that can "create" a window and ALSO make an app to do the same thing seems strange and exceptional - not common enough for there to be a joke about it. I'm slightly confused. -- Brettpeirce (talk) 18:35, 28 January 2015 (UTC)
Of course, their are legitimate reasons why an application may want to display itself fully or partially off screen. 173.245.50.92 21:29, 28 January 2015 (UTC)
This is even the basis for the best pranks (works even better if you disable some shortcuts to make it harder to close). But unless you get the keyboard interrupts, windows+D will solve the modal issue anywayMeneldal (talk) 02:32, 29 January 2015 (UTC)meneldal
A long time ago, when the interweb was young (think Win95/98+Napster era), this sort of 'new window creation' was common for ad popups. Create a window with the title just outside the scrren border and giggle as the user tried to delete it. I wrote a small utility back then that actually found and killed these. I used to get a lot of them. I can't seem to remember why.199.27.128.176 05:18, 29 January 2015 (UTC)
This is one of the best comic explanations I've ever read on this wiki. Very nice job. Zowayix (talk) 15:45, 30 January 2015 (UTC)
FYI: Window creation on Windows OS is perfectly fine when it comes to positioning the window. If I say width=320 and left=-640 that's what I expect to happen! It's bad software and not bad OS when windows appear on strange coordinates. 162.158.87.23 (talk) (please sign your comments with ~~~~)
I just submitted a change[2] to Chrome that works around a dialog bug in macOS 10.12 Sierra. I was reminded of this. 162.158.166.43 (talk) (please sign your comments with ~~~~)
I am reminded of the constant problems I encounter when using Windows that are just stupid and drive me crazy! For example, just today I encountered (for not the first time) windows refusing to let me delete an empty folder as it was "in use" by the exact same windows explorer I was using to delete it! It turned out to be a thumbs.db problem, as it always seems to be, and was even harder to fix than usual, not helped by Microsoft making gpedit only available for the overpriced windows home pro edition! I even recently had to help my computer science teacher figure out this exact same problem. There seem to be a lot of things like this in windows that just defy common sense, such as (also today) the windows "waiting for programs to quit to shutdown" dialog being held up by "shutdown". What sort of system would think it needed to close the process "shutdown" before it could shutdown?! It also is frequently held up by windows explorer when it's not even being actively used.
Another infuriating thing was that after a power outage when windows started up and went to it's system repair mode, it said "no keyboard detected, press any key to continue startup" or something to that effect. I, using a Bluetooth keyboard, was unable to tell it to continue startup, as apparently it hadn't loaded Bluetooth drivers yet, resulting in me having to go buy a USB keyboard just to get it to finish booting!! Meanwhile my Mac mini work with the Bluetooth keyboards even when reformatting the drive, let alone after a restart! I have almost no problems of this sort when using a mac, which makes it all the more frustrating when I have to use windows. I am not trying to start a debate or anything, just remarking on how I totally sympathize with this comic, and it reminded me of my own frustrations with Windows. Anyway, </rant> 03:53, 13 May 2017 (UTC)
Categories: All comicsComics from 2015Comics from JanuaryWednesday comicsComics featuring CueballComics featuring HairyComputers